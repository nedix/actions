name: Update package

inputs:
  platforms:
    description: Create package for these platforms.
    required: true
  registry:
    description: Name of the package registry.
    required: true
  registry_path:
    description: Path on the registry to store the package.
    required: true
  registry_username:
    description: Username for the package registry
    required: true
  registry_password:
    description: Password for the package registry
    required: true
  tags:
    description: Collection of tags separated by newlines.
    required: true
  enable_short_sha:
    description: Enable the short sha package tag.
    default: 'true'
  enable_version_tag:
    description: Enable the semver package tag.
    default: 'true'
  enable_latest_tag:
    description: Enable the latest package tag.
    default: 'true'

runs:
  using: composite
  steps:
    - id: registry-login
      name: Login to package registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    - id: setup-qemu
      name: Setup QEMU
      uses: docker/setup-qemu-action@v3

    - id: setup-buildx
      name: Setup Buildx
      uses: docker/setup-buildx-action@v3

    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v4.2.1
      with:
        fetch-depth: 0
        ref: ${{ github.event.repository.default_branch }}

    - id: prepare-tags
      name: Prepare tags
      shell: sh
      run: |
        echo "short_sha=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT
        echo "version_tag=$(git tag --points-at HEAD)" >> $GITHUB_OUTPUT

    - id: build-and-push
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: ${{ inputs.platforms }}
        push: true
        tags: |
          ${{ inputs.enable_latest_tag == 'true' && format('{0}/{1}:{2}', inputs.registry, inputs.registry_path, 'latest') }}
          ${{ inputs.enable_short_sha == 'true' && format('{0}/{1}:{2}', inputs.registry, inputs.registry_path, steps.prepare-tags.outputs.short_sha) }}
          ${{ inputs.enable_version_tag == 'true' && format('{0}/{1}:{2}', inputs.registry, inputs.registry_path, steps.prepare-tags.outputs.version_tag) }}
          ${{ inputs.tags }}

# TODO: package cache
#        cache-from: |
#          type=registry,ref=${{ format('${{ inputs.registry }}/{0}:{1}', github.repository, 'cache') }}
#        cache-to: |
#          type=registry,ref=${{ format('${{ inputs.registry }}/{0}:{1}', github.repository, 'cache') }},mode=max
